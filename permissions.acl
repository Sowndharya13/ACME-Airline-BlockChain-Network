/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
rule Default {
    description: "Allow all participants access to all resources"
    participant: "ANY"
    operation: ALL
    resource: "org.acme.airline.**"
    action: ALLOW
} 

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
// This Rule is needed for all Participants
rule AcmeNetworkAdminPermissionSystem {
  description: "can READ the system registries"
  participant: "ANY"
  operation: READ
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW  
}

// #1 Allow the 'System Network Admin' to carry out Identities management
//    and Network operations
rule NetworkControlPermission {
  description:  "give admin ALL access to system resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "org.hyperledger.composer.system.*"
  action: ALLOW  
}
// rule ParticipantRegistryControlPermission {
//   description:  "give admin ALL access to ACME participant types"
//   participant: "org.hyperledger.composer.system.NetworkAdmin"
//   operation: ALL
//   resource: "org.acme.airline.participant.*"
//   action: ALLOW  
// }
// rule AcmeNetworkAdminPermissionAcme {
//   description: "can READ the resource registries"
//   participant: "org.acme.airline.participant.ACMEParticipant"
//   operation: READ
//   resource: "org.acme.airline.**"
//   action: ALLOW
// }
// #3.1 Needed for ACME Participants to be able to execute transactions

// rule AcmeParticipantPermissionHistorian {
//   description: "can write HistorianRecord to the Historian"
//   participant: "org.acme.airline.participant.ACMEPersonnel"
//   operation: CREATE
//   resource: "org.hyperledger.composer.system.HistorianRecord"
//   action: ALLOW  
// }

// #3.2 Needed for Creating the "CreateFlight" transaction
// Only employees @ ACME can execute this transaction
/*
rule ACMEPersonnelPermission {
  description: "only ACME personnel can create a flight"
  participant: "org.acme.airline.participant.ACMEPersonnel"
  operation: CREATE
  resource: "org.acme.airline.flight.*"
  transaction: "org.acme.airline.flight.CreateFlight"
  action: ALLOW
}
rule ACMEPersonnelPermission {
  description: "only ACME personnel can create a flight"
  participant: "org.acme.airline.participant.ACMEPersonnel"
  operation: CREATE
  resource: "org.acme.airline.**"
  transaction: "org.acme.airline.flight.CreateFlight"
  action: ALLOW
}
*/

// rule ACMEPersonnelPermission {
//   description: "only ACME personnel can create a flight"
//   participant(p): "org.acme.airline.participant.ACMEPersonnel"
//   operation: CREATE
//   resource(r): "org.acme.airline.flight.*"
//   transaction: "org.acme.airline.flight.CreateFlight"
//   condition: (p.department=='Logistics')
//   action: ALLOW
// }